---
# This playbook contains common plays that will be run on all nodes.

- name: jdiskreport | Check user exists
  user: name={{jdiskreport_owner}} state=present

- name: jdiskreport | Check user home directory
  stat: path={{jdiskreport_owner_home}}
  register: home_present

- debug: msg=" jdiskreport | Path exists and is a directory"
  when: home_present.stat.isdir is defined and home_present.stat.isdir == true

- name: jdiskreport | Create temporary directory
  shell: mktemp -d
  register: tempdir
  sudo: true
  tags: jdiskreport_setup

- name: jdiskreport | Install zip
  apt:
    pkg=zip
    state="present"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags: jdiskreport_setup

- name: jdiskreport | Download jdiskreport
  command: /usr/sfw/bin/wget -P {{ jdiskreport_dir_tmp }} {{ jdiskreport_url }} --no-check-certificate
  register: jdiskreport_download
  when: (ansible_distribution == 'Solaris')
  tags: jdiskreport_setup
  
- name: jdiskreport | Download jdiskreport
  get_url:
    url="{{ jdiskreport_url }}"
    dest="{{ jdiskreport_dir_tmp }}/"
  register: jdiskreport_download
  when: (ansible_distribution != 'Solaris')  
  tags: jdiskreport_setup

- name: jdiskreport | Create base directory
  file:
    dest="{{jdiskreport_base_dir}}"
    state=directory
    owner="{{jdiskreport_owner}}"
    group="{{jdiskreport_group}}"
  sudo : yes
#  when: jdiskreport_download.changed
  tags: jdiskreport_setup

- name: jdiskreport | Extract archive jdiskreport (zip)
  command: chdir={{ jdiskreport_base_dir }} /usr/bin/unzip -o -q {{ jdiskreport_dir_tmp }}/{{ jdiskreport_archive }}
#  when: jdiskreport_download.changed
  tags: jdiskreport_setup

#- name: jdiskreport | Ensure jdiskreport restarted
#  service: name=jdiskreport state=restarted
#  when: jdiskreport_configure.changed

- name: jdiskreport | Cleanup temporary directory
  file: name={{ tempdir.stdout }} state=absent
  tags: jdiskreport_setup

- debug: msg=" jdiskreport | Start jdiskreport java -jar {{ jdiskreport_base_dir }}/{{ jdiskreport_archive_extracted }}/{{ jdiskreport_archive_extracted }}.jar"

